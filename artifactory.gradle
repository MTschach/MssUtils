
def artifact = new Properties()
try {
   artifact.load(new FileInputStream("${project.projectDir}${File.separator}deploy.settings"))
} catch (Exception e) {
   artifact.load(new FileInputStream("${project.projectDir}${File.separator}..${File.separator}deploy.settings"))
}


allprojects {
   repositories {
      mavenLocal()
      maven {
         url 'https://raw.githubusercontent.com/MTschach/MssArtifactory/main'
      }
      jcenter()
   }
}


task publishLocal {
   dependsOn 'publishToMavenLocal'
}


task callMaven (type: Exec) {
   def filename = "${project.projectDir}${File.separator}build${File.separator}libs${File.separator}" + artifact.artifactId + '.jar'
   def file = new File(filename)
   if (!file.exists()) {
      filename = "${project.projectDir}${File.separator}build${File.separator}libs${File.separator}" + artifact.artifactId + '-' + artifact.version + '.jar'
      file = new File(filename)
   }
   
   println ("callMavewn for " + filename)
   if (file.exists()) {
      dependsOn build, generatePomFileForMavenJavaPublication
      def jarfile = "-Dfile=" + filename
      def groupid = '-DgroupId=' + artifact.groupId
      def artifactid = '-DartifactId=' + artifact.artifactId
      def version = '-Dversion=' + artifact.version
      def artifactpath = "-DlocalRepositoryPath=${localArtifactoryPath}${File.separator}"
      commandLine 'mvn', 'install:install-file', groupid, artifactid, version, jarfile, '-Dpackaging=jar', '-DgeneratePom=true', artifactpath, '-DcreateChecksum=true', "-DpomFile=${project.projectDir}${File.separator}build${File.separator}publications${File.separator}mavenJava${File.separator}pom-default.xml"
      println ("client lib required")
   }
   else {
      commandLine 'echo', 'no client lib required for artifactory'
   }
}


task renameFiles {
   dependsOn callMaven
   doLast {
      file ("${localArtifactoryPath}${File.separator}" + artifact.groupId + "${File.separator}" + artifact.artifactId + "${File.separator}maven-metadata-local.xml").renameTo(file("${localArtifactoryPath}${File.separator}" + artifact.groupId + "${File.separator}" + artifact.artifactId + "${File.separator}maven-metadata.xml"))
      file ("${localArtifactoryPath}${File.separator}" + artifact.groupId + "${File.separator}" + artifact.artifactId + "${File.separator}maven-metadata-local.xml.md5").renameTo(file("${localArtifactoryPath}${File.separator}" + artifact.groupId + "${File.separator}" + artifact.artifactId + "${File.separator}maven-metadata.xml.md5"))
      file ("${localArtifactoryPath}${File.separator}" + artifact.groupId + "${File.separator}" + artifact.artifactId + "${File.separator}maven-metadata-local.xml.sha1").renameTo(file("${localArtifactoryPath}${File.separator}" + artifact.groupId + "${File.separator}" + artifact.artifactId + "${File.separator}maven-metadata.xml.sha1"))
   }
}


task genArtifacts {
   dependsOn callMaven, renameFiles
}
