/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'jacoco'

defaultTasks 'build'

apply from: 'deploy.gradle'

apply from: 'artifactory.gradle'

apply from: 'eclipse.gradle'

buildscript {
   apply from: 'buildscript.gradle'
}

apply plugin: 'de.jjohannes.extra-java-module-info'
apply plugin: "name.remal.module-info-generator"

extraJavaModuleInfo {
   automaticModule('log4j-api-2.17.2.jar', '')
   automaticModule('log4j-core-2.17.2.jar', '')
}

sourceSets {
   main {
      java {
         srcDir 'src'
      }
   }
   test {
      java {
         srcDir 'test'
      }
   }
}

sourceCompatibility=11
targetCompatibility=11

dependencies {
   implementation       group: 'org.apache.logging.log4j'                     , name: 'log4j-core'                      , version: "${loggingVersion}"
   implementation       group: 'org.apache.logging.log4j'                     , name: 'log4j-api'                       , version: "${loggingVersion}"

   testImplementation   group: 'org.junit.jupiter'                            , name: 'junit-jupiter'            , version: "${junitVersion}"
//   testImplementation   group: 'org.junit.jupiter'                            , name: 'junit-jupiter-engine'            , version: "${junitVersion}"
//   testImplementation   group: 'org.junit.platform'                           , name: 'junit-platform-launcher'         , version: 'latest.release'
//   testImplementation group: 'org.junit', name: 'junit-bom', version: '5.4.0-M1', ext: 'pom'
   
}


jacocoTestReport {
   dependsOn test
   reports {
      xml.required = true
   }
}

test {
    useJUnitPlatform()
}

tasks.generateModuleInfo {
   moduleName = 'mss.utils'
   exports {
      includes.add('de.mss.utils')
      includes.add('de.mss.utils.*')
   }
   requires {
      add('org.apache.logging.log4j')
      add('org.apache.logging.log4j.core')
   }
}
